#---------------------------------------------------------------------
# 全局配置文件
#---------------------------------------------------------------------
global
      #日志配置，所有的日志都记录本地，通过local2输出
      log 127.0.0.1 local2
      #改变haproxy的工作目录
      chroot /var/lib/haproxy
      #指定pid文件的路径
      pidfile /var/run/haproxy.pid
      #指定运行服务的用户
      user haproxy
      #指定运行服务的用户组
      group haproxy
      #守护进程启动
      daemon
      #设置进程数量（CPU核数的一半,可通过lscpu查询）
      nbproc 4
      #禁用epoll机制
      noepoll
      #最大连接数的设定
      maxconn 65535
      #监控
      stats socket /etc/haproxy/haproxy.sock mode 666

#---------------------------------------------------------------------
# 默认配置文件
#---------------------------------------------------------------------
defaults
      #全局日志记录
      log global
      #默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK
      mode tcp
      #详细记录http日志
      option  httplog
      #不记录健康检查日志信息
      option dontlognull
      #重新分发，对应后端服务器宕机后，强制定向到其他运行正常的服务器
      option redispatch
      #3次连接失败则认为服务不可用
      retries 3
      #连接超时时间
      timeout connect 10s
      #客户端超时时间
      timeout client 1m
      #服务端超时时间
      timeout server 1m
      #心跳检测超时间
      timeout check 10s
      #最大连接数(默认值为2000)
      maxconn 65535

      #log-forcat自定义日志格式
      #ci:cp 客户端ip及端口
      #T 客户端请求时间;
      #Tw 在请求队列中等待的总时间(T代表总共 w代表waiting)如果是-1的话 代表客服端主动断开请求
      #bi:bp 后端服务请求的源ip及端口
      #Tc 用来连接后端server tcp建联总时间(T代表总共 c代表connect)如果是-1的话,代表客服端在tcp建联的时候断开请求;
      #ac 会话记录过程中进程并发连接数    
      #fc 会话记录过程中frontend中的并发连接数(frontend 级别的)
      #rc 会话记录过程中重试后端server的次数
      #bc 会话记录过程中backend中已经建立握手的并发连接数(backend 级别的)
      #f frontend名称
      #b 后端服务(backend)名称
      #s 后端服务的名称
      #si:sp 后端服务的ip及端口
      #t 服务端响应时间
      #sc 会话记录过程中后端服务活跃的并发连接数
      #sq 处理该请求时 server端的队列正在处理的连接数
      #U 服务端从客户端下载的字节数
      #B 服务端返回客户端的字节数;        
      #Tt haproxy完成整个请求的总时间(包括接受请求,向后端发起,接收后端的内容和重试的所有时间);
      #ST 状态码;
      #log-format %ci:%cp\ [%T]\ %Tw\ %bi:%bp\ %Tc/%ac/%fc/%rc/%bc\ %f/%b/%s\ %si:%sp\ [%t]\ %sc/%sq/%U/%B/%Tt/%ST
      log-format {"client_ip":"%ci","client_port":"%cp","timestamp":"%T","Tw":"%Tw","backendSourceIP":"%bi","backendSourcePort":"%bp","Tc":"%Tc","actconn":"%ac","FrontendCurrentConn":"%fc","retries":"%rc","backendCurrentConn":"%bc","frontendName":"%f","backend":"%b","serverName":"%s","upstream_addr":"%si","upstream_port":"%sp","response_time":"%t","serverConcurrentConn":"%sc","srvQueue":"%sq","bytes_sent":"%U","bytes_received":"%B","session_time":"%Tt","status":"%ST"}

#---------------------------------------------------------------------
# XXX代理
#---------------------------------------------------------------------
frontend aiui *:8200
    mode tcp
    default_backend xxxyyy

backend xxxyyy
    balance roundrobin
       server ser1 12.23.239.231:443  check
       server ser2 12.23.239.232:443  check
