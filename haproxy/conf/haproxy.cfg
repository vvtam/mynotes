global
        maxconn 5120
        chroot /usr/local/haproxy
        uid 99
        gid 99
        daemon
        quiet
        nbproc 2
        pidfile /usr/local/haproxy/haproxy.pid
defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        log 127.0.0.1 local3
        retries 3
        option redispatch
        maxconn 2000
        contimeout      5000
        clitimeout      50000
        srvtimeout      50000
  
frontend public
        #如果配置了keepalived,就用*,或者用vip
	bind            *:8888
        #bind            192.168.1.10:443 ssl crt /etc/haproxy/haproxy.pem
        mode            http
        log             global
        option          httplog
        option          dontlognull
        monitor-uri     /monitoruri
        maxconn         8000
        timeout client  30s

        stats uri       /admin/stats
        stats auth admin:admin
        use_backend     static if { hdr_beg(host) -i img }
        use_backend     static if { path_beg /img /css   }
        default_backend static

# The static backend backend for 'Host: img', /img and /css.
backend static
        mode            http
        balance         roundrobin
        option prefer-last-server
        retries         2
        option redispatch
        timeout connect 5s
        timeout server  5s
	#健康检测,不配置默认用4层，配置了就是7层
        #option httpchk /index.html HTTP/1.0
	#监听端口
        #option httpchk
        #GET后端的web页面检测
	#option httpchk  GET /index.html
	#匹配头信息，更加精细化
	#option httpchk HEAD /index.jsp HTTP/1.1\r\nHost:\ www.xxx.com
        server web1 192.168.119.128:8080 weight 1 minconn 1 maxconn 3 check inter 40000
        server web2 192.168.119.129:8081 weight 1 minconn 1 maxconn 3 check inter 40000
        server web3 192.168.119.130:8082 weight 1 minconn 1 maxconn 3 check inter 40000

# the application servers go here
#backend dynamic
#        mode            http
#        balance         roundrobin
#        retries         2
#        option redispatch
#        timeout connect 5s
#        timeout server  30s
#        timeout queue   30s
#        option httpchk  HEAD /login.php
#        cookie          DYNSRV insert indirect nocache
#        fullconn        4000 # the servers will be used at full load above this number of connections
#        server          dynsrv1 192.168.1.1:80 minconn 50 maxconn 500 cookie s1 check inter 1000
#        server          dynsrv2 192.168.1.2:80 minconn 50 maxconn 500 cookie s2 check inter 1000
#        server          dynsrv3 192.168.1.3:80 minconn 50 maxconn 500 cookie s3 check inter 1000
#        server          dynsrv4 192.168.1.4:80 minconn 50 maxconn 500 cookie s4 check inter 1000
